/*******************************************************************************
 * PatchQuitButton
 * In ESC_MENU previously read into $UIMenuIF("Body"), replaces
 * 'QUIT_BUTTON', function() Infinity_ShutdownGame() end,
 * with
 * 'QUIT_BUTTON', function() flushDeferredOptions() Infinity_ShutdownGame() end,
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO HiddenOptions.PatchQuitButton
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~'QUIT_BUTTON', function() flushDeferredOptions() Infinity_ShutdownGame() end,~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\('QUIT_BUTTON'[%TAB% ]*,[%TAB% ]*function()[%TAB% ]*Infinity_ShutdownGame()[%TAB% ]*end[%TAB% ]*,\)~
		BEGIN
			SET found = 1
		END
		~%adder%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.PatchQuitButton - failed to patch QUIT_BUTTON~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * PatchQuitButton2
 * In ESC_MENU previously read into $UIMenuIF("Body"), replaces
 * 'QUIT_BUTTON', function() optionsScreen:QuitGame() end,
 * with
 * 'QUIT_BUTTON', function() flushDeferredOptions() optionsScreen:QuitGame() end,
 * 
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO HiddenOptions.PatchQuitButton2
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~'QUIT_BUTTON', function() flushDeferredOptions() optionsScreen:QuitGame() end,~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\('QUIT_BUTTON'[%TAB% ]*,[%TAB% ]*function()[%TAB% ]*optionsScreen:QuitGame()[%TAB% ]*end[%TAB% ]*,\)~
		BEGIN
			SET found = 1
		END
		~%adder%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.PatchQuitButton2 - failed to patch QUIT_BUTTON~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * PrependQuitGameAction
 * In menu previously read into $UIMenuIF("Body"), Appends "flushDeferredOptions()"
 * to start of QUIT_GAME_BUTTON action event
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO HiddenOptions.PrependQuitGameAction
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT tempfs $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%%TAB%flushDeferredOptions() ~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%button[^{]*{[^}]*QUIT_GAME_BUTTON[^}]*action%MWHITE%%MDQUOTE%\)\(%MNOTDQUOTE%*%MDQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	ACTION_IF NOT %found% THEN
	BEGIN // Try for single quote
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%button[^{]*{[^}]*QUIT_GAME_BUTTON[^}]*action%MWHITE%%MSQUOTE%\)\(%MNOTSQUOTE%*%MSQUOTE%\)~
			BEGIN
				SPRINT tempstr ~%MATCH1%%adder2%%MATCH2%~
				SET found = 1
			END
			~%tempstr%~

	END
	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.PrependQuitGameAction - failed to find QUIT_GAME_BUTTON action event~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * PrependQuitGameAction2
 * In menu previously read into $UIMenuIF("Body"), Appends "flushDeferredOptions()"
 * to start of YES_BUTTON action event
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO HiddenOptions.PrependQuitGameAction2
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT tempfs $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%%TAB%flushDeferredOptions() ~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%button[^{]*{[^}]*YES_BUTTON[^}]*action%MWHITE%%MDQUOTE%\)\(%MNOTDQUOTE%*%MDQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	ACTION_IF NOT %found% THEN
	BEGIN // Try for single quote
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%button[^{]*{[^}]*YES_BUTTON[^}]*action%MWHITE%%MSQUOTE%\)\(%MNOTSQUOTE%*%MSQUOTE%\)~
			BEGIN
				SPRINT tempstr ~%MATCH1%%adder2%%MATCH2%~
				SET found = 1
			END
			~%tempstr%~

	END
	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.PrependQuitGameAction2 - failed to find YES_BUTTON action event~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * PrependMenuonOpen
 * In menu previously read into $UIMenuIF("Body"), Appends "flushDeferredOptions()"
 * to start of menu onOpen event
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO HiddenOptions.PrependMenuonOpen
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT tempfs $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%%TAB%flushDeferredOptions() ~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%onOpen%MWHITE%%MDQUOTE%\)\(%MNOTDQUOTE%*%MDQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	ACTION_IF NOT %found% THEN
	BEGIN // Try for single quote
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%onOpen%MWHITE%%MSQUOTE%\)\(%MNOTSQUOTE%*%MSQUOTE%\)~
			BEGIN
				SPRINT tempstr ~%MATCH1%%adder2%%MATCH2%~
				SET found = 1
			END
			~%tempstr%~

	END
	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.PrependMenuonOpen - failed to find onOpen event~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// HiddenOptions.AddFileAfterMatch
// Adds the contents of the file passed in $UIMenuIF("Filespec") to the contents
// of $UIMenuIF("Body") immediately after a match of $UIMenuIF("LuaRegex").
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO HiddenOptions.AddFileAfterMatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT matchstr $UIMenuIF("LuaRegex")
	LOCAL_SPRINT insertstr $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from passed
	LOCAL_SET found = SIZE_OF_FILE ~%insertstr%~
	COPY - ~%insertstr%~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)

	// Put target code into inline file
	OUTER_SET found = 0 
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of assignment, add new code after it
	ACTION_IF NOT %found% THEN
	BEGIN
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~%matchstr%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In HiddenOptions.AddFileAfterMatch - failed to match regex~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * Hidden Options Installation
 ******************************************************************************/	

// Open UI.MENU
LOG @12
SILENT
LAUNCH_ACTION_MACRO UIMenuOpen
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @20
END

// Patch START Menu
LOG @194
SILENT
OUTER_SPRINT $UIMenuIF("MenuName") ~START~
OUTER_SPRINT $UIMenuIF("Body") ~~
LAUNCH_ACTION_MACRO UIMenuGetMenu

ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	LAUNCH_ACTION_MACRO UIMenuClose
	FAIL @195
END

LAUNCH_ACTION_MACRO HiddenOptions.PrependMenuonOpen
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	LAUNCH_ACTION_MACRO UIMenuClose
	FAIL @196
END

LAUNCH_ACTION_MACRO UIMenuUpdateMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	LAUNCH_ACTION_MACRO UIMenuClose
	FAIL @103
END

ACTION_IF (IsLeUIBG2 OR IsLeUISOD OR IsLeUIBG1 OR IsEETLeUI) THEN
BEGIN
	// Patch START_MAIN Menu
	LOG @203
	SILENT
	OUTER_SPRINT $UIMenuIF("MenuName") ~START_MAIN~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu

	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		LAUNCH_ACTION_MACRO UIMenuClose
		FAIL @204
	END

	LAUNCH_ACTION_MACRO HiddenOptions.PrependQuitGameAction
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		LAUNCH_ACTION_MACRO UIMenuClose
		FAIL @205
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		LAUNCH_ACTION_MACRO UIMenuClose
		FAIL @103
	END
END ELSE
BEGIN
	ACTION_IF NOT IsPSTEE THEN
	BEGIN
		// Patch ESC_MENU Menu
		LOG @104
		SILENT
		OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
		OUTER_SPRINT $UIMenuIF("Body") ~~
		LAUNCH_ACTION_MACRO UIMenuGetMenu

		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @105
		END

		LAUNCH_ACTION_MACRO HiddenOptions.PatchQuitButton
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @106
		END

		LAUNCH_ACTION_MACRO UIMenuUpdateMenu
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @103
		END
	END
END

// Patch QuitMenu Menu
LOG @200
SILENT
OUTER_SPRINT $UIMenuIF("MenuName") ~QuitMenu~
OUTER_SPRINT $UIMenuIF("Body") ~~
LAUNCH_ACTION_MACRO UIMenuGetMenu

ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	LAUNCH_ACTION_MACRO UIMenuClose
	FAIL @201
END

ACTION_IF IsPSTEE THEN
BEGIN
	LAUNCH_ACTION_MACRO HiddenOptions.PrependQuitGameAction2
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		LAUNCH_ACTION_MACRO UIMenuClose
		FAIL @202
	END
END ELSE
BEGIN
	LAUNCH_ACTION_MACRO HiddenOptions.PrependQuitGameAction
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		LAUNCH_ACTION_MACRO UIMenuClose
		FAIL @202
	END
END
LAUNCH_ACTION_MACRO UIMenuUpdateMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	LAUNCH_ACTION_MACRO UIMenuClose
	FAIL @103
END

// Platform specific copy - support for 3E Thief Sneak Attack
ACTION_IF (%IsBG2% OR %IsBGEE% OR %IsLeUIBG2% OR %IsLeUIBG1% OR %IsTIWDonBG2% OR %IsTIWD2onBG2%) THEN
BEGIN
	COPY ~%PKGNAME%/copy/ModsOptions/backstab.SPL~ ~override~
END

// UI specific copy/patches
ACTION_MATCH 1
WITH
	%IsBG2% %IsLeUIBG2%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden3.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsTIWDonSoD%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden5.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsTIWDonBG2% %IsTIWD2onBG2%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden6.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsEETBG2%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/modoimg1.bam~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MOS5020.PVRZ~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden3.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsBG2onSoD% %IsLeUISOD% %IsLeUIBG1% %IsEETLeUI%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/GUIMGX.MOS~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MOS5018.PVRZ~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MODOPBG2.BAM~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MOS5022.PVRZ~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden2.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsBGEE%
	BEGIN
		LOG @17
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MODOPEE.BAM~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/MOS5023.PVRZ~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden4.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	%IsSoDOverhaul%
	BEGIN
		LOG @17
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO2.lua~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden1.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END
	
	%IsSoD% %IsEETSoD% %IsKRDS% %IsKRDS0% %IsKRDS1% %IsKRDS2% %IsKRDS3% %IsKRDS4% %IsKRDS5% %IsKRDS6%
	BEGIN
		LOG @17
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO.lua~ ~override~

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden1.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END
	
	%IsPSTEE%
	BEGIN
		// Copy override files
		LOG @24
		SILENT
		COPY ~%PKGNAME%/copy/ModsOptions/M_HideO3.lua~ ~override~
		COPY ~%PKGNAME%/copy/ModsOptions/en_HideO.lua~ ~override~

		// Patch includes.lua
		LOG @43
		SILENT
		INCLUDE ~%PKGNAME%/lib/ACFixIncludeLua.tpa~
		LAUNCH_ACTION_MACRO EEUITweaks.FixIncludeLua

		// Patch UI.MENU beginning to load lang_HideO.lua
		LOG @206
		SILENT

		OUTER_SPRINT $UIMenuIF("LuaRegex") ~^[%TAB% ]*if[%TAB% ]*([%TAB% ]*uiTranslationFile[%TAB% ]*)[%TAB% ]*then%MWHITE%Infinity_DoFile[%TAB% ]*([%TAB% ]*"L_"[%TAB% ]*\.\.[%TAB% ]*uiTranslationFile[%TAB% ]*)%MWHITE%else%MWHITE%Infinity_DoFile[%TAB% ]*([%TAB% ]*"L_en_us"[%TAB% ]*)%MWHITE%end.*$~
		OUTER_SPRINT $UIMenuIF("Body") ~~
		LAUNCH_ACTION_MACRO UIMenuGetMatchingLuaBlock
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			FAIL @207
		END

		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/lua/ModsOptions/uimenutop2.lua~
		LAUNCH_ACTION_MACRO HiddenOptions.AddFileAfterMatch
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			FAIL @208
		END

		LAUNCH_ACTION_MACRO UIMenuUpdateLuaBlock
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			FAIL @103
		END

		// Append Hidden Game Options to UI.MENU
		LOG @101002
		SILENT
		OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modohidden7.menu~
		LAUNCH_ACTION_MACRO UIMenuAppendFile
		ACTION_IF NOT $UIMenuIF("Succeeded") THEN
		BEGIN
			LAUNCH_ACTION_MACRO UIMenuClose
			FAIL @101004
		END
	END

	DEFAULT // Nothing left except Fail
		FAIL @33

END

// All done - close up
LOG @13
SILENT
LAUNCH_ACTION_MACRO UIMenuClose
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @21
END
