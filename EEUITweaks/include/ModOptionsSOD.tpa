/*******************************************************************************
 *
 * IsSoD IsEETSoD Section
 *
 ******************************************************************************/
//
// ModOptions.StartOptionsFirstPatch
// Adds 'if (modOptionsStartMenu) then modOptionsStartMenu() end' to onopen
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.StartOptionsFirstPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~if (modOptionsStartMenu) then modOptionsStartMenu() end~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~

	OUTER_SPRINT tempstr ~~

	// Look for and patch onopen followed by double quoted code block
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MDQUOTE%\(%MNOTDQUOTE%*\)%MDQUOTE%~
		BEGIN
			SPRINT tempstr ~onopen%LE%%TAB%"%LE%%TAB%%TAB%%MATCH1%%LE%%TAB%%TAB%%adder%%LE%%TAB%"~
			SET found = 1
		END
		~%tempstr%~

	// If not found, look for and patch onopen followed by single quoted code block
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.StartOptionsFirstPatch - failed to find onopen with double quotes. Trying single~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MSQUOTE%\(%MNOTSQUOTE%*\)%MSQUOTE%~
			BEGIN
				SPRINT tempstr ~onopen%LE%%TAB%'%LE%%TAB%%TAB%%MATCH1%%LE%%TAB%%TAB%%adder%%LE%%TAB%'~
				SET found = 1
			END
			~%tempstr%~
	END

	// If not found, look for size x y line and insert our onopen after it
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.StartOptionsFirstPatch - failed to find onopen with single quotes. Trying to add after size~
		OUTER_SPRINT adder ~%TAB%onopen%LE%%TAB%"%LE%%TAB%%TAB%%adder%%LE%%TAB%"%LE%~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~size%MWHITE%[0-9]*%MWHITE%[0-9]*.*%MEOL%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.StartOptionsFirstPatch - failed to find size line~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE
	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.StartOptionsSecondPatch
// Names the list 'OPTIONS_LIST' and sets the list's Y and Height area
// parameters to accomodate the 'MODS' button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.StartOptionsSecondPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~
	LOCAL_SET found = 0
	LOCAL_SET X = 0
	LOCAL_SET Y = 0
	LOCAL_SET W = 0
	LOCAL_SET H = 0
	LOCAL_SET YNEW = 187
	LOCAL_SET HNEW = 385

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~

	OUTER_SPRINT tempstr ~~
	OUTER_SPRINT adder ~%TAB%%TAB%name%TAB%'OPTIONS_LIST'%LE%~

	// Search for list containing menu entries, name it OPTIONS_LIST, and capture its X, Y, W, H area
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~list%MWHITE%{\(%MNOBRACE%*%MNESTBR%\)+%MNOBRACE%+area%MWHITE%\([-0-9]+\)%MWHITE%\([-0-9]+\)%MWHITE%\([-0-9]+\)%MWHITE%\([-0-9]+\).*%MEOL%~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET X = %MATCH5%
			SET Y = %MATCH6%
			SET W = %MATCH7%
			SET H = %MATCH8%
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.StartOptionsSecondPatch - failed to find list to name - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Otherwise, look for the area definition and patch it. This is safe even if previously patched manually
	BEGIN
		OUTER_SPRINT adder ~area%TAB%%X% %YNEW% %W% %HNEW%~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~area[%TAB% ]+%X%[%TAB% ]+%Y%[%TAB ]+%W%[%TAB ]+%H%~
			BEGIN
				SET found = 1
			END
			~%adder%~

		// If not found, fail
		ACTION_IF NOT %found% THEN
		BEGIN
			LOG ~In ModOptions.StartOptionsSecondPatch failed to find the previously found area definition - bailing out~
			OUTER_SET $UIMenuIF("Succeeded") = 0
		END ELSE
		// Success - copy .../CounterInLine to $UIMenuIF("Body")
		BEGIN
			OUTER_SPRINT $UIMenuIF("Body") ~~
			OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
			COPY - ~.../CounterInLine~ ~.../CounterInLine~
				READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
			OUTER_SET $UIMenuIF("Succeeded") = 1
		END
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.EscMenuPatch
// Adds the button defined in modoesc1.menu as the last element in the menu
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.EscMenuPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc1.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc1.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc1.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.EscMenuPatch - failed to match menu body. UI.MENU too unusual to handle - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.OptionsButtonsLuaPatch
// Adds the OptionsButtons conditional assignment defined in modobutton1.lua
// to the Lua code block containing the default OptionsButtons definition
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.OptionsButtonsLuaPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modobutton1.lua
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/lua/ModsOptions/modobutton1.lua~
	COPY - ~%PKGNAME%/lua/ModsOptions/modobutton1.lua~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)

	// Put Lua code block into inline file
	OUTER_SET found = 0
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of assignment, add new code after it
	ACTION_IF NOT %found% THEN
	BEGIN
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~OptionsButtons%MWHITE%*=%MNOBRACE%*{%MWHITE%\(%MBRACES%,%MWHITE%\)+}%MWHITE%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.OptionsButtonsLuaPatch - failed to match OptionsButtons assignment - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.SoDSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.SoDSpecific
BEGIN
	// SoD configuration
	LOG @19

	// Patch START_OPTIONS
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.StartOptionsFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END
	LAUNCH_ACTION_MACRO ModOptions.StartOptionsSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.EscMenuPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch OptionsButtons assignment
	LOG @100003
	SILENT

	OUTER_SPRINT $UIMenuIF("LuaRegex") ~OptionsButtons%MWHITE%=%MWHITE%{~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	OUTER_SET $UIMenuIF("LuaID")  = 0 - 1
	LAUNCH_ACTION_MACRO UIMenuGetMatchingLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100004
	END

	LAUNCH_ACTION_MACRO ModOptions.OptionsButtonsLuaPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100005
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

 	// Add Mods Options menus
 	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions1.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsBG2onSoD Section
 *
 ******************************************************************************/
//
// ModOptions.PatchBG2onSoDStartOptions
// Inserts button defined in 'modostartopt1.menu' as the last element of
// START_OPTIONS menu.
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.PatchBG2onSoDStartOptions
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modostartopt1.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modostartopt1.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modostartopt1.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.PatchBG2onSoDStartOptions - failed to match menu body - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.BG2onSoDEscMenuFirstPatch
// Adds enabled criteria to the "OPTIONS_TITLE" label
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.BG2onSoDEscMenuFirstPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%enabled "(not(modOptionsIngameDisabled) and 1) or modOptionsIngameDisabled()"~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Look for and patch the 'text "OPTIONS_TITLE"' label
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(label%MWHITE%{\)\(%MWHITE%area[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ][0-9]+%MWHITE%text[%TAB% ]+%MQUOTE%[%TAB% ]*OPTIONS_TITLE[%TAB% ]*%MQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.BG2onSoDEscMenuFirstPatch - failed to find OPTIONS_TITLE label - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.BG2onSoDEscMenuSecondPatch
// Adds enabled criteria to the "versionString" label
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.BG2onSoDEscMenuSecondPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%enabled "(not(modOptionsIngameDisabled) and 1) or modOptionsIngameDisabled()"~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Look for and patch the 'text lua "versionString"' label
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(label%MWHITE%{\)\(%MWHITE%area[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ][0-9]+%MWHITE%text[%TAB% ]+lua[%TAB% ]+%MQUOTE%[%TAB% ]*versionString[%TAB% ]*%MQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.BG2onSoDEscMenuSecondPatch - failed to find versionString label - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.BG2onSoDEscMenuThirdPatch
// Inserts button defined in modoesc2.menu before the GAMEPLAY_BUTTON button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.BG2onSoDEscMenuThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc2.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc2.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc2.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for GAMEPLAY_BUTTON, insert new button code before
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~[%TAB% ]+button%MWHITE%{%MNOBRACE%+Infinity_PushMenu[%TAB% ]*([%TAB ]*%MQUOTE%OPTIONS_GAMEPLAY%MQUOTE%[%TAB% ]*)~
		BEGIN
			SPRINT tempstr ~%adder%%MATCH0%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.BG2onSoDEscMenuThirdPatch - failed to find GAMEPLAY_BUTTON - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

END

//
// ModOptions.BG2onSoDSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.BG2onSoDSpecific
BEGIN
	LOG @16 // Installing BG2onSoD

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~MODOPSOD.BAM~
			pvrz_files = ~MOS5024.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~GUIERR8.MOS~
			pvrz_files = ~MOS5019.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS
	LOG @100
	SILENT
	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.PatchBG2onSoDStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT
	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.BG2onSoDEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.BG2onSoDEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.BG2onSoDEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

 	// Add Mods Options menus
 	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions2.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsSoDOverhaul Section
 *
 ******************************************************************************/
//
// ModOptions.SoDOverhaulOptionsGameplayPatch
// Puts enabled entry on UI_SETTINGS button, adds conditional MODOPT button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.SoDOverhaulOptionsGameplayPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~enabled%TAB%%TAB%"(modsInGameContext and (modOptionsIngameEnabled() == 0)) or ((not modsInGameContext) and (modOptionsStartupEnabled() == 0))"%LE%~
	LOCAL_SET found = 0
	LOCAL_SPRINT newbutton ~~

	// Read patch insertion from modobutton1.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modobutton1.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modobutton1.menu~ ~.../CounterInLine~
		READ_ASCII 0 newbutton (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Now find target button and patch it
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~\(button%MWHITE%{.*%MEOL%\)\(%MNOBRACE%+text[%TAB% ]+%MQUOTE%[%TAB% ]*RG_UI_SETTINGS[%TAB% ]*%MQUOTE%%MNOBRACE%+}.*%MEOL%\)~
		BEGIN
			SET found = 1
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%%newbutton%~
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.SoDOverhaulOptionsGameplayPatch - failed to find UI SETTINGS buton - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.SoDOverhaulStartOptionsPatch
// Adds "modsInGameContext = false" to the beginning of the onopen event
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.SoDOverhaulStartOptionsPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%modsInGameContext = false%LE%~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~

	OUTER_SPRINT tempstr ~~

	// Search for onopen, insert patch
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MQUOTE%~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.SoDOverhaulStartOptionsPatch - failed to find onopen - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.SoDOverhaulEscMenuPatch
// Adds "modsInGameContext = true" to the beginning of the onopen event
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.SoDOverhaulEscMenuPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%modsInGameContext = true%LE%~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~

	OUTER_SPRINT tempstr ~~

	// Search for onopen, insert patch
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MQUOTE%~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.SoDOverhaulEscMenuPatch - failed to find onopen - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.SoDOverhaulSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.SoDOverhaulSpecific
BEGIN
	// Installing Dragonspear UI++
	LOG @18

	// Patch OPTIONS_GAMEPLAY
	LOG @107
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~OPTIONS_GAMEPLAY~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @108
	END

	LAUNCH_ACTION_MACRO ModOptions.SoDOverhaulOptionsGameplayPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @109
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch START_OPTIONS
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.SoDOverhaulStartOptionsPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.SoDOverhaulEscMenuPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

 	// Add Mods Options menus and registration code for UI SETTINGS
 	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions1.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/lua/ModsOptions/modouiset1.lua~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsBGEE Section
 *
 ******************************************************************************/
//
// ModOptions.PatchBGEEStartOptions
// Inserts button defined in 'modostartopt2.menu' as the last element of
// START_OPTIONS menu.
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.PatchBGEEStartOptions
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modostartopt2.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modostartopt2.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modostartopt2.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.PatchBGEEStartOptions - failed to match menu body - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.BGEEEscMenuThirdPatch
// Inserts button defined in modoesc3.menu before the GAMEPLAY_BUTTON button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.BGEEEscMenuThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc3.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc3.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc3.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for GAMEPLAY_BUTTON, insert new button code before
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~[%TAB% ]+button%MWHITE%{%MNOBRACE%+Infinity_PushMenu[%TAB% ]*([%TAB ]*%MQUOTE%OPTIONS_GAMEPLAY%MQUOTE%[%TAB% ]*)~
		BEGIN
			SPRINT tempstr ~%adder%%MATCH0%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.BGEEEscMenuThirdPatch - failed to find GAMEPLAY_BUTTON - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

END

//
// ModOptions.BGEESpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.BGEESpecific
BEGIN
	LOG @14 // Installing BGEE

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~MODOPSOD.BAM~
			pvrz_files = ~MOS5024.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS
	LOG @100
	SILENT
	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.PatchBGEEStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT
	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.BG2onSoDEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.BG2onSoDEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.BGEEEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

  	// Add Mods Options menus
 	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions4.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsBG2 IsEETBG2 Section
 *
 ******************************************************************************/
//
// ModOptions.TOBPatchStartOptions
// Inserts button defined in 'modostartopt1.menu' as the last element of
// START_OPTIONS menu.
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TOBPatchStartOptions
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modostartopt1.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modostartopt1.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modostartopt1.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TOBPatchStartOptions - failed to match menu body - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.TOBEscMenuFirstPatch
// Adds enabled criteria to the "OPTIONS_TITLE" label
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%enabled "(not(modOptionsIngameDisabled) and 1) or modOptionsIngameDisabled()"~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Look for and patch the 'text "OPTIONS_TITLE"' label
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(label%MWHITE%{\)\(%MWHITE%area[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ][0-9]+%MWHITE%text[%TAB% ]+%MQUOTE%[%TAB% ]*OPTIONS_TITLE[%TAB% ]*%MQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TOBEscMenuFirstPatch - failed to find OPTIONS_TITLE label - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.TOBEscMenuSecondPatch
// Adds enabled criteria to the "versionString" label
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%LE%%TAB%%TAB%enabled "(not(modOptionsIngameDisabled) and 1) or modOptionsIngameDisabled()"~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Look for and patch the 'text lua "versionString"' label
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(label%MWHITE%{\)\(%MWHITE%area[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ]+[0-9]+[%TAB% ][0-9]+%MWHITE%text[%TAB% ]+lua[%TAB% ]+%MQUOTE%[%TAB% ]*versionString[%TAB% ]*%MQUOTE%\)~
		BEGIN
			SPRINT tempstr ~%MATCH1%%adder%%MATCH2%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TOBEscMenuSecondPatch - failed to find versionString label - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.TOBEscMenuThirdPatch
// Inserts button defined in modoesc2.menu before the GAMEPLAY_BUTTON button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc2.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc2.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc2.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for GAMEPLAY_BUTTON, insert new button code before
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~[%TAB% ]+button%MWHITE%{%MNOBRACE%+Infinity_PushMenu[%TAB% ]*([%TAB ]*%MQUOTE%OPTIONS_GAMEPLAY%MQUOTE%[%TAB% ]*)~
		BEGIN
			SPRINT tempstr ~%adder%%MATCH0%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TOBEscMenuThirdPatch - failed to find GAMEPLAY_BUTTON - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

END

//
// ModOptions.BG2TOBSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.BG2TOBSpecific
BEGIN
	LOG @28 // Installing BG2EE

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg1.BAM~
			pvrz_files = ~MOS5020.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions3.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsEETBG2 Section
 *
 ******************************************************************************/
//
// ModOptions.BG2EETSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.BG2EETSpecific
BEGIN
	LOG @31 // Installing BG2EE

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg2.BAM~
			pvrz_files = ~MOS5021.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions6.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsLeUIBG2 Section
 *
 ******************************************************************************/
//
// ModOptions.LeUIBG2Specific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.LeUIBG2Specific
BEGIN
	LOG @34 // Installing LeUI BG2EE

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg1.BAM~
			pvrz_files = ~MOS5020.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions5.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsLeUISOD Section
 *
 ******************************************************************************/
//
// ModOptions.LeUISODSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.LeUISODSpecific
BEGIN
	LOG @35 // Installing LeUI SoD

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~MODOPSOD.BAM~
			pvrz_files = ~MOS5024.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~GUIERR8.MOS~
			pvrz_files = ~MOS5019.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions7.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsLeUIBG1 Section
 *
 ******************************************************************************/
//
// ModOptions.LeUIBG1Specific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.LeUIBG1Specific
BEGIN
	LOG @36 // Installing LeUI BG1EE

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~MODOPSOD.BAM~
			pvrz_files = ~MOS5024.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~GUIERR8.MOS~
			pvrz_files = ~MOS5019.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions7.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsEETLeUI Section
 *
 ******************************************************************************/
//
// ModOptions.EETLeUISpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.EETLeUISpecific
BEGIN
	LOG @37 // Installing LeUI EET

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg2.BAM~
			pvrz_files = ~MOS5021.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBPatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions6.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsKRDS Section
 *
 ******************************************************************************/
//
// ModOptions.KRDSEscMenuPatch
// Adds the button defined in modoesc4.menu as the last element in the menu
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.KRDSEscMenuPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc4.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc4.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc4.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.KRDSEscMenuPatch - failed to match menu body. UI.MENU too unusual to handle - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.KRDSSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.KRDSSpecific
BEGIN
	// SoD configuration
	LOG @38

	// Patch START_OPTIONS
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.StartOptionsFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END
	LAUNCH_ACTION_MACRO ModOptions.StartOptionsSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.KRDSEscMenuPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch OptionsButtons assignment
	LOG @100003
	SILENT

	OUTER_SPRINT $UIMenuIF("LuaRegex") ~OptionsButtons%MWHITE%=%MWHITE%{~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	OUTER_SET $UIMenuIF("LuaID")  = 0 - 1
	LAUNCH_ACTION_MACRO UIMenuGetMatchingLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN BEGIN
		FAIL @100004
	END

	LAUNCH_ACTION_MACRO ModOptions.OptionsButtonsLuaPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN BEGIN
		FAIL @100005
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

 	// Add Mods Options menus
 	LOG @100001
	SILENT

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions1.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsTIWDonBG2 Section
 *
 ******************************************************************************/
//
// ModOptions.TIWDonBG2PatchStartOptions
// Inserts button defined in 'modostartopt3.menu' as the last element of
// START_OPTIONS menu.
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TIWDonBG2PatchStartOptions
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modostartopt3.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modostartopt3.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modostartopt3.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TIWDonBG2PatchStartOptions - failed to match menu body - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.TIWDonBG2EscMenuThirdPatch
// Inserts button defined in modoesc5.menu before the GAMEPLAY_BUTTON button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TIWDonBG2EscMenuThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc5.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc5.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc5.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for GAMEPLAY_BUTTON, insert new button code before
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~[%TAB% ]+button%MWHITE%{%MNOBRACE%+Infinity_PushMenu[%TAB% ]*([%TAB ]*%MQUOTE%OPTIONS_GAMEPLAY%MQUOTE%[%TAB% ]*)~
		BEGIN
			SPRINT tempstr ~%adder%%MATCH0%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TIWDonBG2EscMenuThirdPatch - failed to find GAMEPLAY_BUTTON - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

END

//
// ModOptions.TIWDonBG2Specific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.TIWDonBG2Specific
BEGIN
	LOG @40 // Installing trinit's IWD GUI

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg1.BAM~
			pvrz_files = ~MOS5020.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWDonBG2PatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWDonBG2EscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions8.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsTIWDonSoD Section
 *
 ******************************************************************************/
//
// ModOptions.TIWDonSoDSpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.TIWDonSoDSpecific
BEGIN
	LOG @40 // Installing trinit's IWD GUI

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg2.BAM~
			pvrz_files = ~MOS5021.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWDonBG2PatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWDonBG2EscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions11.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsTIWD2onBG2 Section
 *
 ******************************************************************************/
 //
// ModOptions.TIWD2onBG2PatchStartOptions
// Inserts button defined in 'modostartopt4.menu' as the last element of
// START_OPTIONS menu.
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TIWD2onBG2PatchStartOptions
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modostartopt4.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modostartopt4.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modostartopt4.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of menu except closing brace, insert new button code
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~menu%MWHITE%{\(%MNOBRACE%*%MBRACES%\)+%MNOBRACE%*~
		BEGIN
			SPRINT tempstr ~%MATCH0%%adder%~
			SET found = 1
		END
		~%tempstr%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TIWD2onBG2PatchStartOptions - failed to match menu body - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

//
// ModOptions.TIWD2onBG2EscMenuThirdPatch
// Inserts button defined in modoesc6.menu before the GAMEPLAY_BUTTON button
// On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
//
DEFINE_ACTION_MACRO ModOptions.TIWD2onBG2EscMenuThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from modoesc6.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ModsOptions/modoesc6.menu~
	COPY - ~%PKGNAME%/menu/ModsOptions/modoesc6.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for GAMEPLAY_BUTTON, insert new button code before
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~[%TAB% ]+button%MWHITE%{%MNOBRACE%+Infinity_PushMenu[%TAB% ]*([%TAB ]*%MQUOTE%OPTIONS_GAMEPLAY%MQUOTE%[%TAB% ]*)~
		BEGIN
			SPRINT tempstr ~%adder%%MATCH0%~
			SET found = 1
		END
		~%tempstr%~

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.TIWD2onBG2EscMenuThirdPatch - failed to find GAMEPLAY_BUTTON - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

END

//
// ModOptions.TIWD2onBG2Specific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.TIWD2onBG2Specific
BEGIN
	LOG @41 // Installing trinit's IWD2 GUI

	// Copy specific override files
	LOG @17
	SILENT
	LAF EEUITweaks.CopyPVRZResource
		STR_VAR
			source_folder = EVAL ~%PKGNAME%/copy/ModsOptions~
			resource_file = ~modoimg1.BAM~
			pvrz_files = ~MOS5020.PVRZ~
		RET
			$UIMenuIF("Succeeded") = succeeded
	END
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @44
	END

	// Patch START_OPTIONS menu
	LOG @100
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~START_OPTIONS~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @101
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWD2onBG2PatchStartOptions
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @102
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuFirstPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TOBEscMenuSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO ModOptions.TIWD2onBG2EscMenuThirdPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions9.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END
END

/*******************************************************************************
 *
 * IsPSTEE Section
 *
 ******************************************************************************/
//
// ModOptions.PSTEESpecific
// Main sequence
//
DEFINE_ACTION_MACRO ModOptions.PSTEESpecific
BEGIN
	LOG @42 // Installing for PST:EE

	// Patch includes.lua
	LOG @43
	SILENT
	LAUNCH_ACTION_MACRO EEUITweaks.FixIncludeLua

	// Patch UI.MENU beginning to load lang_ModOp.lua
	LOG @206
	SILENT

	OUTER_SPRINT $UIMenuIF("LuaRegex") ~^[%TAB% ]*if[%TAB% ]*([%TAB% ]*uiTranslationFile[%TAB% ]*)[%TAB% ]*then%MWHITE%Infinity_DoFile[%TAB% ]*([%TAB% ]*"L_"[%TAB% ]*\.\.[%TAB% ]*uiTranslationFile[%TAB% ]*)%MWHITE%else%MWHITE%Infinity_DoFile[%TAB% ]*([%TAB% ]*"L_en_us"[%TAB% ]*)%MWHITE%end.*$~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMatchingLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @207
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateLuaBlock
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Patch ESC_MENU
	LOG @104
	SILENT

	OUTER_SPRINT $UIMenuIF("MenuName") ~ESC_MENU~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @105
	END

	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoesc7.menu~
	LAM UIMenuAppendMenuElements
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @106
	END

	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END

	// Add ModsOptions menus
	LOG @100001
	SILENT
	OUTER_SPRINT $UIMenuIF("Filespec") ~%PKGNAME%/menu/ModsOptions/modoptions10.menu~
	LAUNCH_ACTION_MACRO UIMenuAppendFile
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @100002
	END

END


/*******************************************************************************
 * Mods Options Installation
 ******************************************************************************/
// Open UI.MENU abstraction
LOG @12
SILENT
LAUNCH_ACTION_MACRO UIMenuOpen
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @20
END

// Copy common override files
LOG @24
SILENT
COPY ~%PKGNAME%/copy/ModsOptions/M__.lua~ ~override~
COPY ~%PKGNAME%/copy/ModsOptions/M_ModsOp.lua~ ~override~
COPY ~%PKGNAME%/copy/ModsOptions/en_ModOp.lua~ ~override~

ACTION_MATCH 1
WITH
	%IsSoD% %IsEETSoD% %IsKRDS1% %IsKRDS2% %IsKRDS3% %IsKRDS4% %IsKRDS5% WHEN NOT(%IsKRDS0%)
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.SoDSpecific
	END

	%IsKRDS% %IsKRDS0%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.KRDSSpecific
	END

	%IsBG2onSoD%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.BG2onSoDSpecific
	END

	%IsSoDOverhaul%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.SoDOverhaulSpecific
	END

	%IsBGEE%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.BGEESpecific
	END

	%IsBG2%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.BG2TOBSpecific
	END

	%IsEETBG2%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.BG2EETSpecific
	END

	%IsLeUIBG2%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.LeUIBG2Specific
	END

	%IsLeUISOD%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.LeUISODSpecific
	END

	%IsLeUIBG1%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.LeUIBG1Specific
	END

	%IsEETLeUI%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.EETLeUISpecific
	END

	%IsTIWDonBG2%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.TIWDonBG2Specific
	END

	%IsTIWDonSoD%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.TIWDonSoDSpecific
	END

	%IsTIWD2onBG2%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.TIWD2onBG2Specific
	END

	%IsPSTEE%
	BEGIN
		LAUNCH_ACTION_MACRO ModOptions.PSTEESpecific
	END

	DEFAULT // Nothing left except Fail
		FAIL @33

END

// All done - close up
LOG @13
SILENT
LAUNCH_ACTION_MACRO UIMenuClose
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @21
END

