/*******************************************************************************
 * CreateLuaFiles
 * Encapsulates the creation of the two generated Lua files based on the
 * contents of SODCLTXT.2DA/clastext.2DA and XPLEVEL.2DA
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.CreateLuaFiles
BEGIN
	LOCAL_SPRINT	kitname ~~
	LOCAL_SPRINT	buffer ~~
	LOCAL_SPRINT	baseclassname ~~
	LOCAL_SPRINT	target2da ~~
	LOCAL_SET		xplevelrowcount = 0
	LOCAL_SET		rownum = 0
	LOCAL_SET		sodclasstxtrowcount = 0
	LOCAL_SET		classid = 0
	LOCAL_SET		mixedid = 0
	LOCAL_SET		flag = 0
	LOCAL_SET		colnum = 0
	LOCAL_SET		clasmincol = 0
	LOCAL_SET		lvlmincol = 0
	LOCAL_SET		lvllimit = 0

// Build the 3 arrays we need to correlate base class names and class IDs
	ACTION_IF %IsBG2% OR %IsEETBG2% OR %IsEETSoD% OR %IsLeUIBG2% OR %IsEETLeUI% OR %IsTIWDonBG2% THEN
	BEGIN
		OUTER_SPRINT target2da ~clastext.2DA~
		OUTER_SET clasmincol = 10
		OUTER_SET lvlmincol = 1
		OUTER_SET lvllimit = 42
	END ELSE
	BEGIN
		ACTION_IF %IsBGEE% OR %IsLeUIBG1% THEN
		BEGIN
			OUTER_SPRINT target2da ~clastext.2DA~
			OUTER_SET clasmincol = 9
			OUTER_SET lvlmincol = 1
			OUTER_SET lvllimit = 41
		END ELSE
		BEGIN
			OUTER_SPRINT target2da ~SODCLTXT.2DA~
			OUTER_SET clasmincol = 9
			OUTER_SET lvlmincol = 1
			OUTER_SET lvllimit = 41
		END
	END

// First, a table of the valid base class names from XPLEVEL.2DA
	COPY_EXISTING ~XPLEVEL.2DA~ ~override~
		READ_2DA_ENTRIES_NOW ~xplevel~ %lvlmincol%
		COUNT_2DA_ROWS %lvlmincol% xplevelrowcount
	BUT_ONLY_IF_IT_CHANGES

	OUTER_FOR(SET rownum = 3 ; rownum < xplevelrowcount ; SET rownum += 1)
	BEGIN
		OUTER_PATCH ~~ 
		BEGIN
			READ_2DA_ENTRY_FORMER ~xplevel~ %rownum% 0 kitname
			DEFINE_ASSOCIATIVE_ARRAY validBaseClassNames
			BEGIN
				~%kitname%~ => ~VALID~
			END
		END
	END

// Now two tables to map base class name to class ID and the converse
	COPY_EXISTING ~%target2da%~ ~override~
		READ_2DA_ENTRIES_NOW ~sodclasstxt~ %clasmincol%
		COUNT_2DA_ROWS %clasmincol% sodclasstxtrowcount
	BUT_ONLY_IF_IT_CHANGES

	OUTER_FOR(SET rownum = 0; rownum < sodclasstxtrowcount; SET rownum += 1)
	BEGIN
		OUTER_PATCH ~~
		BEGIN
			READ_2DA_ENTRY_FORMER ~sodclasstxt~ %rownum% 0 kitname
			READ_2DA_ENTRY_FORMER ~sodclasstxt~ %rownum% 1 classid
			SET flag = ($validBaseClassNames(~%kitname%~) STRING_EQUAL ~VALID~)
		END
		ACTION_IF (%flag% = 1)
		BEGIN
			ACTION_DEFINE_ASSOCIATIVE_ARRAY baseClassNameToID
			BEGIN
				~%kitname%~ => ~%classid%~
			END
			ACTION_DEFINE_ASSOCIATIVE_ARRAY baseClassIDToName
			BEGIN
				~%classid%~ => ~%kitname%~
			END
		END
	END

// Now we can create the two lua files. First, the MixIdtoClassIdMap file - YZ_PgBar.lua
	OUTER_SPRINT buffer ~local mixidtoclassidmap%LE%mixidtoclassidmap = {%LE%--  MIXED    CLASSID   Class/kit name~
	OUTER_FOR(SET rownum = 0; rownum < sodclasstxtrowcount; SET rownum += 1)
	BEGIN
		OUTER_PATCH ~~
		BEGIN
			READ_2DA_ENTRY_FORMER ~sodclasstxt~ %rownum% 5 mixedid
			READ_2DA_ENTRY_FORMER ~sodclasstxt~ %rownum% 1 classid
			READ_2DA_ENTRY_FORMER ~sodclasstxt~ %rownum% 0 kitname
			SPRINT baseclassname $baseClassIDToName(~%classid%~)
			SET flag = ($validBaseClassNames(~%baseclassname%~) STRING_EQUAL ~VALID~)
		END
		ACTION_IF (%flag% = 1)
		BEGIN
			OUTER_SPRINT buffer ~%buffer%%LE%%TAB%[%mixedid%]%TAB%=%TAB%%classid%,%TAB%--%kitname%~
		END
	END

	OUTER_SPRINT buffer ~%buffer%%LE%}%LE%~
	OUTER_SPRINT buffer ~%buffer%for k,v in pairs(mixidtoclassidmap) do MixIdtoClassIdMap[k] = v end%LE%~
	COPY - ~ToInlineTemplate~ ~YZ_PgBar.lua~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%buffer%~

	COPY ~YZ_PgBar.lua~ ~override~

// Now the ClassIdToXPLevelMap file - WX_PgBar.lua
	OUTER_SPRINT buffer ~local classidtoxplevelmap%LE%classidtoxplevelmap = {~
	OUTER_FOR(SET rownum = 3; rownum < xplevelrowcount; SET rownum += 1)
	BEGIN
		OUTER_PATCH ~~
		BEGIN
			READ_2DA_ENTRY_FORMER ~xplevel~ %rownum% 0 kitname
			SPRINT classid $baseClassNameToID(~%kitname%~)
			SPRINT buffer ~%buffer%%LE%[%classid%] =%TAB%{~
			FOR(SET colnum = 1; colnum < lvllimit; SET colnum +=1)
			BEGIN
				READ_2DA_ENTRY_FORMER ~xplevel~ %rownum% %colnum% flag
				SPRINT buffer ~%buffer%%flag%,~
			END
		END
		OUTER_SPRINT buffer ~%buffer%},~
	END
	OUTER_SPRINT buffer ~%buffer%%LE%}%LE%~
	OUTER_SPRINT buffer ~%buffer%for k,v in pairs(classidtoxplevelmap) do ClassIdToXPLevelMap[k] = v end%LE%~

	COPY - ~ToInlineTemplate~ ~WX_PgBar.lua~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%buffer%~

	COPY ~WX_PgBar.lua~ ~override~
END

/*******************************************************************************
 * CharacterFirstPatch
 * Adds 'initPgBarMods()' and 
 * 'hidePortrait = prgBarInitialDisplay(hidePortrait)' to onopen
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.CharacterFirstPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~%TAB%%TAB%initPgBarMods()%LE%%TAB%%TAB%hidePortrait = prgBarInitialDisplay(hidePortrait)%LE%~
	LOCAL_SET found = 0

	// Put current menu definition into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// First, check to see if the patch has already been manually applied.
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~initPgBarMods[$TAB% ]*([%TAB% ]*)%MWHITE%hidePortrait%MWHITE%=%MWHITE%prgBarInitialDisplay[%TAB% ]*([%TAB% ]*hidePortrait[%TAB% ]*)~
		BEGIN
			SET found = 1
		END
		~%MATCH0%~

	// If not found, look for and patch onopen followed by double quoted code block
	ACTION_IF NOT %found% THEN
	BEGIN
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MDQUOTE%%MNOTDQUOTE%*updateAttrTable.*%MEOL%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// If not found, look for and patch onopen followed by single quoted code block
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ProgressBars.CharacterFirstPatch - failed to find onopen with double quotes. Trying single~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~onopen%MWHITE%%MSQUOTE%%MNOTSQUOTE%*updateAttrTable.*%MEOL%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ProgressBars.CharacterFirstPatch - failed to find onopen single quote. UI.MENU too unusual to handle - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * CharacterSecondPatch
 * Replaces progress bar label/label, label/button, label/label/button 
 * with label/label/button from characterpatch2.menu
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.CharacterSecondPatch 
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~
	LOCAL_SET X = 0
	LOCAL_SET Y = 0
	LOCAL_SET W = 0
	LOCAL_SET H = 0
	LOCAL_SPRINT sizedlabel ~~ 
	LOCAL_SPRINT sizedbutton ~~
	LOCAL_SPRINT levelstringlabel ~~

	// Read patch insertion from characterpatch2.menu
	LOCAL_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ProgressBar/characterpatch2.menu~
	COPY - ~%PKGNAME%/menu/ProgressBar/characterpatch2.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0 

	// Put current menu definiton into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// First, lets find the level up progress bar label and capture its X, Y, W, H
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~label%MWHITE%{%MWHITE%area[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)%MNOBRACE%+progressbar[%TAB% ]+lua%MNOBRACE%+greyscale%MNOBRACE%+progressbar[%TAB% ]+color%MNOBRACE%+progressbar[%TAB% ]+full~
		BEGIN
			INNER_ACTION
			BEGIN
				ACTION_IF (INDEX(CASE_INSENSITIVE EVALUATE_REGEXP ~enabled.+hidePortrait~ ~%MATCH0%~) < 0)
				BEGIN
					OUTER_SET X = %MATCH1%
					OUTER_SET Y = %MATCH2%
					OUTER_SET W = %MATCH3%
					OUTER_SET H = %MATCH4%
					OUTER_SET found = 1
				END
			END
		END
		~%MATCH0%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ProgressBars.CharacterSecondPatch - failed to find level up progress bar. UI.MENU too unusual to handle - bailing out~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	 // Otherwise let's start looking for label/button combinations with the same X, Y, W, H values.
	BEGIN
		OUTER_SET found = 0
		OUTER_SPRINT sizedlabel  ~^[%TAB% ]*label%MWHITE%{%MNOBRACE%*area[%TAB% ]+%X%[%TAB% ]+%Y%[%TAB% ]+%W%[%TAB% ]+%H%%MNOBRACE%*}~
		OUTER_SPRINT sizedbutton  ~^[%TAB% ]*button%MWHITE%{%MNOBRACE%*area[%TAB% ]+%X%[%TAB% ]+%Y%[%TAB% ]+%W%[%TAB% ]+%H%%MNOBRACE%*}~
		OUTER_SPRINT levelstringlabel ~^[%TAB% ]*label%MWHITE%{%MNOBRACE%*text[%TAB% ]+lua[%TAB% ]+%MQUOTE%[%TAB% ]*getNextLevelString%MNOBRACE%*}~
		OUTER_SPRINT adder EVAL ~%adder%~

		// Label/Label/Button first
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~%sizedlabel%%MWHITE%%sizedlabel%%MWHITE%%sizedbutton%.*%MEOL%~
			BEGIN
				SET found = 1
			END
			~%adder%~

		ACTION_IF NOT %found% THEN
		BEGIN
			// Label/Button next
			COPY - ~.../CounterInLine~ ~.../CounterInLine~
				REPLACE_EVALUATE CASE_INSENSITIVE ~%sizedlabel%%MWHITE%%sizedbutton%.*%MEOL%~
				BEGIN
					SET found = 1
				END
				~%adder%~
		END

		ACTION_IF NOT %found% THEN
		BEGIN
			// Label/Label
			COPY - ~.../CounterInLine~ ~.../CounterInLine~
				REPLACE_EVALUATE CASE_INSENSITIVE ~%sizedlabel%%MWHITE%%sizedlabel%.*%MEOL%~
				BEGIN
					SET found = 1
				END
				~%adder%~
		END

		// One more case - the progress bar label and the 'getNextLevelString' labels are ajacent
		// but don't quite have the same geometry
		ACTION_IF NOT %found% THEN
		BEGIN
			COPY - ~.../CounterInLine~ ~.../CounterInLine~
				REPLACE_EVALUATE CASE_INSENSITIVE ~%sizedlabel%%MWHITE%%levelstringlabel%.*%MEOL%~
				BEGIN
					SET found = 1
				END
				~%adder%~
		END

		// If not found, nothing to do but fail.
		ACTION_IF NOT %found% THEN
		BEGIN
			LOG ~In ProgressBars.CharacterSecondPatch - failed to find level up progress bar title/button ~
			OUTER_SET $UIMenuIF("Succeeded") = 0
		END
	END

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	ACTION_IF %found% THEN
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
			OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * CharacterThirdPatch
 * Replaces 'BUTTON_2_2' with the contents of characterpatch3.menu with 
 * geometries resolved
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.CharacterThirdPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~
	LOCAL_SET found = 0
	
	LOCAL_SET X = 0			// BUTTON_2_2 X
	LOCAL_SET Y = 0			// BUTTON_2_2 Y
	LOCAL_SET W = 0			// BUTTON_2_2 Width
	LOCAL_SET H = 0			// BUTTON_2_2 Height
// X1 through H1 start as platform specific adjustments to compensate for irregular portrait placement
// on the backgrounds. Summed with X,Y,W,H to effect shift which is used in calculating HP3 and beyond
	LOCAL_SET X1 = 0		// Overall hide X, all level ups X
	LOCAL_SET Y1 = 0		// Overall hide Y, first title Y, first level up Y
	LOCAL_SET W1 = 0		// Overall hide W, all level ups W
	LOCAL_SET H1 = 0		// Calculations
// Calculated geometries based on X1 through H1	
	LOCAL_SET HP3 = 0		// Overall hide H
	LOCAL_SET XP2 = 0		// Progressbars, titles, and overlay labels X
	LOCAL_SET WM4 = 0		// Progressbars, titles, and overlay labels W
	LOCAL_SET YP22 = 0		// First progressbar and overlay label Y
	LOCAL_SET YP44 = 0		// Second title Y, second level up Y
	LOCAL_SET YP66 = 0		// Second progressbar and overlay label Y
	LOCAL_SET YP88 = 0		// Third title Y, third level up Y
	LOCAL_SET YP110 = 0		// Third progressbar and overlay label Y
	LOCAL_SET XM1 = 0		// Small portrait and show combat stats X
	LOCAL_SET YP = 0		// Small portrait Y
	LOCAL_SET WT = 0		// Combat stat W
	LOCAL_SET YT = 0		// Combat stat Y
	LOCAL_SET XT = 0		// Combat stat X
	LOCAL_SET Y9 = 0		// Show combat stats Y (clickable)
	LOCAL_SET W9 = 0		// Show combat stats W (clickable)
	LOCAL_SET XLP = 0		// Large small portrait X
	LOCAL_SET YLP = 0		// Large small portrait Y
	LOCAL_SET WLP = 0		// Large small portrait W
	LOCAL_SET HLP = 0		// Large small portrait H
// Added alternate Y's for Bars On Bottom
	LOCAL_SET YPB = 0		// Small Portrait Y 
	LOCAL_SET YLPB = 0		// Large small portrait Y
	LOCAL_SET Y1B = 0		// First title Y, first level up Y
	LOCAL_SET YP22B = 0		// First progressbar and overlay label Y
	LOCAL_SET YP44B = 0		// Second title Y, second level up Y
	LOCAL_SET YP66B = 0		// Second progressbar and overlay label Y
	LOCAL_SET YP88B = 0		// Third title Y, third level up Y
	LOCAL_SET YP110B = 0	// Third progressbar and overlay label Y
	LOCAL_SET YTB = 0		// Combat stat Y
	LOCAL_SET Y9B = 0		// Show combat stats Y (clickable)

	LOCAL_SPRINT lhl  ~label%MNOBRACE%*{%MNOBRACE%*enabled[%TAB% ]+%MQUOTE%[%TAB% ]*hidePortrait%MNOTQUOTE%*%MQUOTE%%MNOBRACE%+}~
	LOCAL_SPRINT lhb  ~button%MNOBRACE%*{%MNOBRACE%*enabled[%TAB% ]+%MQUOTE%[%TAB% ]*hidePortrait%MNOTQUOTE%*%MQUOTE%%MNOBRACE%+}~
	LOCAL_SPRINT lh22 ~button%MNOBRACE%*{%MNOBRACE%*enabled[%TAB% ]+%MQUOTE%[%TAB% ]*not[%TAB% ]+hidePortrait[%TAB% ]*%MQUOTE%%MNOBRACE%+name[%TAB% ]+%MQUOTE%[%TAB% ]*BUTTON_2_2[%TAB% ]*%MQUOTE%%MNOBRACE%+area[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)%MNOBRACE%+}~

	// Set platform specific offsets
	ACTION_MATCH 1
	WITH
		%IsSoD% %IsEETSoD%
		BEGIN
			OUTER_SET X1 = (0 - 2)
			OUTER_SET Y1 = (0 - 2)
			OUTER_SET W1 = 3
			OUTER_SET H1 = 4
		END
		%IsSoDOverhaul%
		BEGIN
			OUTER_SET X1 = 0
			OUTER_SET Y1 = (0 - 2)
			OUTER_SET W1 = 0
			OUTER_SET H1 = 0
		END
		%IsBG2onSoD%
		BEGIN
			OUTER_SET X1 = 0
			OUTER_SET Y1 = (0 - 2)
			OUTER_SET W1 = 3
			OUTER_SET H1 = 1
		END
		%IsBGEE%
		BEGIN
			OUTER_SET X1 = 2
			OUTER_SET Y1 = 2
			OUTER_SET W1 = (0 - 5)
			OUTER_SET H1 = (0 - 4)
		END
		%IsBG2% %IsEETBG2%
		BEGIN
			OUTER_SET X1 = 1
			OUTER_SET Y1 = 1
			OUTER_SET W1 = (0 - 3)
			OUTER_SET H1 = (0 - 2)
		END
		%IsTIWDonBG2% %IsTIWDonSoD%
		BEGIN
			OUTER_SET X1 = 3
			OUTER_SET Y1 = 0
			OUTER_SET W1 = (0 - 1)
			OUTER_SET H1 = (0 - 3)
		END
		DEFAULT
			LOG ~No platform match~
	END

	// Read patch insertion from characterpatch3.menu
	OUTER_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ProgressBar/characterpatch3.menu~
	COPY - ~%PKGNAME%/menu/ProgressBar/characterpatch3.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0 

	// Put current menu defintion into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT teempstr ~~

	// Check to see if the patch has already been manually applied. If so, replace it
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~^[%TAB% ]*%lhb%%MWHITE%%lhl%%MWHITE%%lhl%%MWHITE%%lhl%%MWHITE%%lhb%%MWHITE%%lhl%%MWHITE%%lhl%%MWHITE%%lhl%%MWHITE%%lhb%%MWHITE%%lhl%%MWHITE%%lhl%%MWHITE% %lhl%%MWHITE% %lhb%%MWHITE%%lhb%%MWHITE%%lhl%%MWHITE%%lhb%%MWHITE%%lh22%.*%MEOL%~
		BEGIN
			SET X = %MATCH1%
			SET Y = %MATCH2%
			SET W = %MATCH3%
			SET H = %MATCH4%
			SET X1 = X + X1
			SET Y1 = Y + Y1
			SET W1 = W + W1
			SET H1 = H + H1
			SET HP3 = %H1%
			SET XP2 = %X1% + 2
			SET WM4 = %W1% - 4
			SET YP22 = %Y1% + 22
			SET YP44 = %Y1% + 44
			SET YP66 = %Y1% + 66
			SET YP88 = %Y1% + 88
			SET YP110 = %Y1% + 110
			SET XM1 = %X1%
			SET YP = %Y1% + (%H1% - 99)
			SET XT = %X1% + 68
			SET WT = %W1% - (%XT% - %X1%)
			SET YT = %YP%
			SET Y9 = %YP%
			SET W9 = %W1%
			SET YLP = %YP110%+24
			SET HLP = %H1% - (%YLP% - %Y1%)
			SET WLP = (%HLP% * 169) / 266
			SET XLP = %X1% + ((%W1% - %WLP%) / 2)
			SET YPB = %Y1%
			SET YLPB = %Y1%
			SET Y1B = %Y1% + (%H1%-132)
			SET YP22B = %Y1B% + 22
			SET YP44B = %Y1B% + 44
			SET YP66B = %Y1B% + 66
			SET YP88B = %Y1B% + 88
			SET YP110B = %Y1B% + 110
			SET YTB = %YPB%
			SET Y9B = %YPB%
			SPRINT adder EVAL ~%adder%~
			SET found = 1
		END
		~%adder%~

	ACTION_IF NOT %found% THEN
	BEGIN
		// Find and replace BUTTON_2_2
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~^[%TAB% ]*button%MWHITE%{%MNOBRACE%+name[%TAB% ]+%MQUOTE%[%TAB% ]*BUTTON_2_2[%TAB% ]*%MQUOTE%%MNOBRACE%+area[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)%MNOBRACE%+}.*%MEOL%~
		BEGIN
			SET X = %MATCH1%
			SET Y = %MATCH2%
			SET W = %MATCH3%
			SET H = %MATCH4%
			SET X1 = X + X1
			SET Y1 = Y + Y1
			SET W1 = W + W1
			SET H1 = H + H1
			SET HP3 = %H1%
			SET XP2 = %X1% + 2
			SET WM4 = %W1% - 4
			SET YP22 = %Y1% + 22
			SET YP44 = %Y1% + 44
			SET YP66 = %Y1% + 66
			SET YP88 = %Y1% + 88
			SET YP110 = %Y1% + 110
			SET XM1 = %X1%
			SET YP = %Y1% + (%H1% - 99)
			SET XT = %X1% + 68
			SET WT = %W1% - (%XT% - %X1%)
			SET YT = %YP%
			SET Y9 = %YP%
			SET W9 = %W1%
			SET YLP = %YP110%+24
			SET HLP = %H1% - (%YLP% - %Y1%)
			SET WLP = (%HLP% * 169) / 266
			SET XLP = %X1% + ((%W1% - %WLP%) / 2)
			SET YPB = %Y1%
			SET YLPB = %Y1%
			SET Y1B = %Y1% + (%H1%-132)
			SET YP22B = %Y1B% + 22
			SET YP44B = %Y1B% + 44
			SET YP66B = %Y1B% + 66
			SET YP88B = %Y1B% + 88
			SET YP110B = %Y1B% + 110
			SET YTB = %YPB%
			SET Y9B = %YPB%
			SPRINT adder EVAL ~%adder%~
			SET found = 1
		END
		~%adder%~
	END

	// Not found, fail
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ProgressBars.CharacterThirdPatch - failed to find BUTTON_2_2 ~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Otherwise, success. Copy .../CounterInLine to $UIMenuIF("Body")
	ACTION_IF %found% THEN
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * CharacterFourthPatch
 * Special version of 3 patch for lefreut's Improved Record Screen
 * Replaces portrait label with the contents of characterpatch3.menu with 
 * geometries resolved
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.CharacterFourthPatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT adder ~~
	LOCAL_SET found = 0
	
	LOCAL_SET X = 0			// Portrait X
	LOCAL_SET Y = 0			// Portrait Y
	LOCAL_SET W = 0			// Portrait Width
	LOCAL_SET H = 0			// Portrait Height
// X1 through H1 start as platform specific adjustments to compensate for irregular portrait placement
// on the backgrounds. Summed with X,Y,W,H to effect shift which is used in calculating HP3 and beyond
	LOCAL_SET X1 = 1		// Overall hide X, all level ups X
	LOCAL_SET Y1 = 1		// Overall hide Y, first title Y, first level up Y
	LOCAL_SET W1 = (0 - 2)	// Overall hide W, all level ups W
	LOCAL_SET H1 = (0 - 2)	// Calculations

// Calculated geometries based on X1 through H1	
	LOCAL_SET HP3 = 0		// Overall hide H
	LOCAL_SET XP2 = 0		// Progressbars, titles, and overlay labels X
	LOCAL_SET WM4 = 0		// Progressbars, titles, and overlay labels W
	LOCAL_SET YP22 = 0		// First progressbar and overlay label Y
	LOCAL_SET YP44 = 0		// Second title Y, second level up Y
	LOCAL_SET YP66 = 0		// Second progressbar and overlay label Y
	LOCAL_SET YP88 = 0		// Third title Y, third level up Y
	LOCAL_SET YP110 = 0		// Third progressbar and overlay label Y
	LOCAL_SET XM1 = 0		// Small portrait and show combat stats X
	LOCAL_SET YP = 0		// Small portrait Y
	LOCAL_SET WT = 0		// Combat stat W
	LOCAL_SET YT = 0		// Combat stat Y
	LOCAL_SET XT = 0		// Combat stat X
	LOCAL_SET Y9 = 0		// Show combat stats Y
	LOCAL_SET W9 = 0		// Show combat stats W
	LOCAL_SET XLP = 0		// Large small portrait X
	LOCAL_SET YLP = 0		// Large small portrait Y
	LOCAL_SET WLP = 0		// Large small portrait W
	LOCAL_SET HLP = 0		// Large small portrait H
	
// Added alternate Y's for Bars On Bottom
	LOCAL_SET YPB = 0		// Small Portrait Y 
	LOCAL_SET YLPB = 0		// Large small portrait Y
	LOCAL_SET Y1B = 0		// First title Y, first level up Y
	LOCAL_SET YP22B = 0		// First progressbar and overlay label Y
	LOCAL_SET YP44B = 0		// Second title Y, second level up Y
	LOCAL_SET YP66B = 0		// Second progressbar and overlay label Y
	LOCAL_SET YP88B = 0		// Third title Y, third level up Y
	LOCAL_SET YP110B = 0	// Third progressbar and overlay label Y
	LOCAL_SET YTB = 0		// Combat stat Y
	LOCAL_SET Y9B = 0		// Show combat stats Y (clickable)

	// Read patch insertion from characterpatch3.menu
	OUTER_SET found = SIZE_OF_FILE ~%PKGNAME%/menu/ProgressBar/characterpatch3.menu~
	COPY - ~%PKGNAME%/menu/ProgressBar/characterpatch3.menu~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0 

	// Put current menu defintion into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT teempstr ~~

	// Find and replace Portrait label
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
	REPLACE_EVALUATE ~^[%TAB% ]*label%MWHITE%{%MNOBRACE%+area[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)[%TAB% ]+\([0-9]+\)%MNOBRACE%+bitmap[%TAB% ]+lua[%TAB% ]+%MQUOTE%%MNOBRACE%+portrait[%TAB% ]*%MQUOTE%%MNOBRACE%*}.*%MEOL%~
	BEGIN
		SET X = %MATCH1%
		SET Y = %MATCH2%
		SET W = %MATCH3%
		SET H = %MATCH4%
		SET X1 = X + X1
		SET Y1 = Y + Y1
		SET W1 = W + W1
		SET H1 = H + H1
		SET HP3 = %H1%
		SET XP2 = %X1% + 2
		SET WM4 = %W1% - 4
		SET YP22 = %Y1% + 22
		SET YP44 = %Y1% + 44
		SET YP66 = %Y1% + 66
		SET YP88 = %Y1% + 88
		SET YP110 = %Y1% + 110
		SET XM1 = %X1%
		SET YP = %Y1% + (%H1% - 99)
		SET XT = %X1% + 68
		SET WT = %W1% - (%XT% - %X1%)
		SET YT = %YP%
		SET Y9 = %YP%
		SET W9 = %W1%
		SET YLP = %YP110%+26
		SET HLP = %H1% - (%YLP% - %Y1%) + 2
		SET WLP = (%HLP% * 169) / 266
		SET XLP = %X1% + ((%W1% - %WLP%) / 2)
		SET YPB = %Y1%
		SET YLPB = %Y1%
		SET Y1B = %Y1% + (%H1%-132)
		SET YP22B = %Y1B% + 22
		SET YP44B = %Y1B% + 44
		SET YP66B = %Y1B% + 66
		SET YP88B = %Y1B% + 88
		SET YP110B = %Y1B% + 110
		SET YTB = %YPB%
		SET Y9B = %YPB%
		SPRINT adder EVAL ~%adder%~
		SET found = 1
	END
	~%adder%~

	// Not found, fail
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ProgressBars.CharacterFourthPatch - failed to find portrait label ~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE

	// Otherwise, success. Copy .../CounterInLine to $UIMenuIF("Body")
	ACTION_IF %found% THEN
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * PatchupdateAttrTable
 * Encapsulates patching the Lua code block containing the updateAttrTable
 * function such that it has a case for currentTab == 9 that is equivalent to
 * the Combat Stats entry on un-modded setups.
 ******************************************************************************/
DEFINE_ACTION_MACRO ProgressBars.PatchupdateAttrTable
BEGIN
	LOCAL_SPRINT	adder ~~
	LOCAL_SET		found = 0
	LOCAL_SPRINT	tempstr ~~

	// Get the code block containing the updateAttrTable function
	OUTER_SPRINT $UIMenuIF("LuaRegex") ~function[%TAB% ]+updateAttrTable[%TAB% ]*([%TAB% ]*)~
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMatchingLuaBlock
	ACTION_IF $UIMenuIF("Succeeded") THEN
	BEGIN
		// Get the patch into a string
		OUTER_SET found = SIZE_OF_FILE ~%PKGNAME%/lua/ProgressBar/combatstats.lua~
		COPY - ~%PKGNAME%/lua/ProgressBar/combatstats.lua~ ~.../CounterInLine~
			READ_ASCII 0 ~adder~ (%found%)

		// Put the block into inline file
		OUTER_SPRINT tempstr $UIMenuIF("Body")
		COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

		COPY - ~ToInlineTemplate~ ~.../CounterInLine~
			REPLACE_EVALUATE ~dummy~ BEGIN END
			~%tempstr%~
		
		// Patch the function
		OUTER_SET found = 0
		OUTER_SPRINT tempstr ~~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE ~\(^[%TAB% ]*elseif[%TAB% ]+currentTab[%TAB% ]*==[%TAB% ]*6[%TAB% ]+then.*%MEOL%\)~
			BEGIN
				SPRINT tempstr ~%adder%%MATCH1%~
				SET found = 1
			END
			~%tempstr%~

		ACTION_IF %found% THEN
		BEGIN
			OUTER_SPRINT $UIMenuIF("Body") ~~
			OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
			COPY - ~.../CounterInLine~ ~.../CounterInLine~
				READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
			
			LAUNCH_ACTION_MACRO UIMenuUpdateLuaBlock // Propagate success or failure
		END ELSE

		BEGIN// Didn't find target insertion point
			OUTER_SET $UIMenu("Succeeded") = 0
			LOG ~In ProgressBars.PatchupdateAttrTable: Didn't find insertion point for new code~
		END
		COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

	END // UIMenuGetMatchingLuaBlock success. Propagate failure
END

/*******************************************************************************
 * Progress Bar Tweaks Installation
 ******************************************************************************/
// Test for lefreut's Improved Record Screen
OUTER_SET ProgressBars.lefreuts = ((MOD_IS_INSTALLED ~EEUITweaks.tp2~ ~2900~) OR (MOD_IS_INSTALLED ~LeUI.tp2~ ~0~))


// Open UI.MENU
PRINT @12
SILENT
LAUNCH_ACTION_MACRO UIMenuOpen
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @20
END

// Patch CHARACTER menu
PRINT @110
SILENT

OUTER_SPRINT $UIMenuIF("MenuName") ~CHARACTER~
OUTER_SPRINT $UIMenuIF("Body") ~~
LAUNCH_ACTION_MACRO UIMenuGetMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @111
END

LAUNCH_ACTION_MACRO ProgressBars.CharacterFirstPatch
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @112
END
LAUNCH_ACTION_MACRO UIMenuUpdateMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @103
END

ACTION_IF (NOT %IsSoDOverhaul%) AND (NOT %ProgressBars.lefreuts%) THEN
BEGIN
	OUTER_SPRINT $UIMenuIF("Body") ~~
	LAUNCH_ACTION_MACRO UIMenuGetMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @111
	END

	LAUNCH_ACTION_MACRO ProgressBars.CharacterSecondPatch
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @112
	END
	LAUNCH_ACTION_MACRO UIMenuUpdateMenu
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @103
	END
END

OUTER_SPRINT $UIMenuIF("Body") ~~
LAUNCH_ACTION_MACRO UIMenuGetMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @111
END

ACTION_IF NOT %ProgressBars.lefreuts% THEN
BEGIN
	LAUNCH_ACTION_MACRO ProgressBars.CharacterThirdPatch
END ELSE
BEGIN
	LAUNCH_ACTION_MACRO ProgressBars.CharacterFourthPatch
END

ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @112
END
LAUNCH_ACTION_MACRO UIMenuUpdateMenu
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @103
END

ACTION_IF %IsBG2onSoD% THEN
BEGIN
	PRINT @300001
	SILENT
	LAUNCH_ACTION_MACRO ProgressBars.PatchupdateAttrTable
	ACTION_IF NOT $UIMenuIF("Succeeded") THEN
	BEGIN
		FAIL @300002
	END
END

// Close UI.MENU
PRINT @13
SILENT
LAUNCH_ACTION_MACRO UIMenuClose
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @21
END

// Create the two Lua files. They're based on 2DA files rather than UI.MENU
PRINT @300003
SILENT
LAUNCH_ACTION_MACRO ProgressBars.CreateLuaFiles
ACTION_IF NOT $UIMenuIF("Succeeded") THEN
BEGIN
	FAIL @300004
END

// Copy files
PRINT @24
SILENT
COPY ~%PKGNAME%/copy/ProgressBar/M_PgBar.lua~ ~override~
COPY ~%PKGNAME%/copy/ProgressBar/en_USPgB.lua~ ~override~



