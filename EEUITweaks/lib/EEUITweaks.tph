/*******************************************************************************
 * EEUITweaks support functions implementing non-UI.MENU utility features
 * or generalized high-level UI.MENU operations
 *
 ******************************************************************************/

/*******************************************************************************
 *
 * EEUITweaks.FixIncludeLua - Needed for PST:EE
 *
 ******************************************************************************/
DEFINE_ACTION_MACRO EEUITweaks.FixIncludeLua
BEGIN
	LOCAL_SPRINT adder ~~
	LOCAL_SET fsize = 0

	// First, put includes.LUA into override if necessary, and test if it's already fixed
	ACTION_IF NOT(FILE_EXISTS ~override/includes.LUA~) THEN
	BEGIN
		COPY ~%PKGNAME%/lib/includes.LUA~ ~override~
	END ELSE
	BEGIN
		ACTION_IF NOT(FILE_CONTAINS ~override/includes.LUA~ ~"M_"~) THEN
		// Not fixed so append contents of %PKGNAME%/lib/includes_LUA_addition.lua to includes.LUA
		BEGIN 
			// Read addition
			OUTER_SET fsize = SIZE_OF_FILE ~%PKGNAME%/lib/includes_LUA_addition.lua~
			COPY - ~%PKGNAME%/lib/includes_LUA_addition.lua~ ~.../CounterInLine~
				READ_ASCII 0 adder (%fsize%)

			APPEND_OUTER ~override/includes.LUA~ ~%adder%~
			COPY - ~EmptyInlineTemplate~ ~.../CounterInline~

		END
	END
END

/*******************************************************************************
 * EEUITweaks.CopyPVRZResource
 * Copies a V2 BAM or MOS file and its associated PVRZ files to 
 * override and dynamically fixes the PVRZ indicies. Optionally
 * allows renaming the V2 BAM/MOS file.
 * 
 * This is to be used when one V2 BAM/MOS references one or more PVRZ files.
 *
 * Inputs:
 * 	source_folder
 *		Folder containing the resource and pvrz files. Default is %MOD_FOLDER%/copy
 * 	resource_file
 *		Simple name of the BAM/MOS file. No default - required
 *  resource_rename
 *		Optional simple new name of override copy of resource_file. Default is ~~
 *		(no rename - use original resource_file name)
 * 	pvrz_files
 *		Space/tab separated list of pvrz file names matching case insensitive regex:
 * 		~MOS[0-9]+\.PVRZ~ . No default - required
 *
 * Return:
 *	succeeded
 *		1 => success, 0 => failure
 *
 * Logs:
 *	Failure descriptions
 ******************************************************************************/
DEFINE_ACTION_FUNCTION EEUITweaks.CopyPVRZResource
	STR_VAR
		source_folder = EVAL ~%MOD_FOLDER%/copy~
		resouce_file = ~~
		resource_rename = ~~
		pvrz_files = ~~
	RET
		succeeded
BEGIN
	OUTER_SET succeeded = 0
	OUTER_SET continue = 1
	ACTION_TRY
		ACTION_IF (~%resource_rename%~ STRING_EQUAL ~~) THEN
		BEGIN
			COPY ~%source_folder%/%resource_file%~ ~override~
				LPF UPDATE_PVRZ_INDICES 
					RET original_base_index new_base_index index_range
				END
		END ELSE
		BEGIN
			COPY ~%source_folder%/%resource_file%~ ~override/%resource_rename%~
				LPF UPDATE_PVRZ_INDICES 
					RET original_base_index new_base_index index_range
				END
		END
	WITH
	DEFAULT
		LOG ~In EEUITweaks.CopyPVRZResource failed to copy and re-index %source_folder%/%resource_file%~
		OUTER_SET continue = 0
	END

	LOG ~original_base_index = %original_base_index%, new_base_index = %new_base_index%, index_range = %index_range%~
	ACTION_IF (original_base_index >= 0 && new_base_index >= 0 && index_range > 0) THEN
	BEGIN
		OUTER_PATCH ~%pvrz_files%~
		BEGIN
			REPLACE_EVALUATE ~[%TAB% ]*\([Mm][Oo][Ss][0-9]+\.[Pp][Vv][Rr][Zz]\)~
			BEGIN
				PATCH_IF (continue = 1) THEN
				BEGIN
					INNER_ACTION
					BEGIN
		      			LAF INSTALL_PVRZ
		      				INT_VAR original_base_index new_base_index
		      				STR_VAR source_file = EVAL ~%source_folder%/%MATCH1%~
		      				RET continue = success
		      			END
		      			ACTION_IF (continue = 1) THEN
		      			BEGIN
		      				OUTER_SET original_base_index += 1
		      				OUTER_SET new_base_index += 1
		      				OUTER_SET index_range -= 1
		      			END
		      			ELSE BEGIN
		      				LOG ~In EEUITweaks.CopyPVRZResource INSTALL_PVRZ failed for %source_folder%/%MATCH1%~
		      			END
		      		END
				END
			END
			~~
		END
	END 
	ELSE BEGIN
		LOG ~In EEUITweaks.CopyPVRZResource UPDATE_PVRZ_INDICES failed to find index values~
		LOG ~original_base_index = %original_base_index%, new_base_index = %new_base_index%, index_range = %index_range%~
		OUTER_SET continue = 0
	END
	ACTION_IF (continue = 1) THEN
	BEGIN
		ACTION_IF (index_range = 0) THEN
		BEGIN
			OUTER_SET succeeded = 1
		END
		ELSE BEGIN
			LOG ~In EEUITweaks.CopyPVRZResource incorrect number of files supplied in pvrz_files~
		END
	END
END

/*******************************************************************************
 * EEUITweaks.MultiCopyPVRZResource
 * Variation on EEUITweaks.CopyPVRZResource that allows multiple resource_files
 * that reference the same pvrz file(s). Does not support resource_file renaming
 *
 * This is to be used when one or more V2 BAM/MOS files reference the same set of
 * one or more PVRZ files.
 *
 * Inputs:
 * 	source_folder
 *		Folder containing the resource and pvrz files. Default is %MOD_FOLDER%/copy
 * 	resource_file
 *		Space/tab separated list of simple name of the BAM/MOS file(s). No default - required
 * 	pvrz_files
 *		Space/tab separated list of pvrz file names matching case insensitive regex:
 * 		~MOS[0-9]+\.PVRZ~ . No default - required
 *
 * Return:
 *	succeeded
 *		1 => success, 0 => failure
 *
 * Logs:
 *	Failure descriptions
 ******************************************************************************/
 DEFINE_ACTION_FUNCTION EEUITweaks.MultiCopyPVRZResource
	STR_VAR
		source_folder = EVAL ~%MOD_FOLDER%/copy~
		resource_file = ~~
		pvrz_files = ~~
	RET
		succeeded
BEGIN
	OUTER_SET succeeded = 0
	OUTER_SET continue = 1

	OUTER_PATCH ~%resource_file%~
	BEGIN
		REPLACE_EVALUATE ~[%TAB% ]*\([A-Za-z0-9]+\.\(\([Bb][Aa][Mm]\)\|\([Mm][Oo][Ss]\)\)\)~
		BEGIN
			PATCH_IF continue THEN
			BEGIN
				INNER_ACTION
				BEGIN
	      			LAF EEUITweaks.CopyPVRZResource 
	      				STR_VAR 
	      					source_folder = EVAL ~%source_folder%~
	      					resource_file = EVAL ~%MATCH1%~
	      					pvrz_files = EVAL ~%pvrz_files%~
	      				RET 
	      					continue = succeeded
	      			END
	      		END
			END
		END
		~~
	END
	OUTER_SET succeeded = %continue%
END

/*******************************************************************************
 * EEUITweaks.PatchBody
 * 
 * In code previously read into $UIMenuIF("Body"), replaces all occurances of 
 * $UIMenuIF("LuaRegex") with contents of $UIMenuIF("Filespec")  
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * Does NOT Update UI.MENU - You'll need to call UIMenuUpdateMenu or 
 * UIMentUpdateLuaBlock as appropriate.
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO EEUITweaks.PatchBody
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT tempfs $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~~
	LOCAL_SPRINT pattern $UIMenuIF("LuaRegex")

	// Read patch insertion from $UIMenuIF("Filespec")
	LOCAL_SET found = SIZE_OF_FILE ~%tempfs%~
	COPY - ~%tempfs%~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)
	OUTER_SET found = 0 

	// Put code block into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Find target patterns, replace them
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~%pattern%~
		BEGIN
			SET found = 1
		END
		~%adder%~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In EEUITweaks.PatchBody - failed to find pattern %pattern%~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	ACTION_IF %found% THEN
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
			OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * EEUITweaks.RemoveBodyCode
 *
 * In code previously read into $UIMenuIF("Body"), removes all occurances of 
 * $UIMenuIF("LuaRegex") 
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * Does NOT Update UI.MENU - You'll need to call UIMenuUpdateMenu or 
 * UIMentUpdateLuaBlock as appropriate.
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO EEUITweaks.RemoveBodyCode
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT pattern $UIMenuIF("LuaRegex")
	LOCAL_SET found = 0

	// Put code block into inline file
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Find target patterns, replace them
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE ~%pattern%~
		BEGIN
			SET found = 1
		END
		~~

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In EEUITweaks.RemoveBodyCode - failed to find pattern %pattern%~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END

	// Success - copy .../CounterInLine to $UIMenuIF("Body")
	ACTION_IF %found% THEN
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
			OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * EEUITweaks.AddFileAfterMatch
 * 
 * Adds the contents of the file passed in $UIMenuIF("Filespec") to the contents
 * of $UIMenuIF("Body") immediately after all matches of $UIMenuIF("LuaRegex").
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * Does NOT Update UI.MENU - You'll need to call UIMenuUpdateMenu or 
 * UIMentUpdateLuaBlock as appropriate.
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO EEUITweaks.AddFileAfterMatch
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT matchstr $UIMenuIF("LuaRegex")
	LOCAL_SPRINT insertstr $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~~

	// Read patch insertion from passed
	LOCAL_SET found = SIZE_OF_FILE ~%insertstr%~
	COPY - ~%insertstr%~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)

	// Put target code into inline file
	OUTER_SET found = 0 
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// Search for all of assignment, add new code after it
	ACTION_IF NOT %found% THEN
	BEGIN
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE ~%matchstr%~
			BEGIN
				SPRINT tempstr ~%MATCH0%%adder%~
				SET found = 1
			END
			~%tempstr%~
	END

	// If not found, nothing to do but fail.
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In EEUITweaks.AddFileAfterMatch - failed to match regex~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END

/*******************************************************************************
 * EEUITweaks.PrependMenuonOpen
 * In menu definition previously read into $UIMenuIF("Body"), Prepends contents
 * of the file passed in $UIMenuIF("Filespec") to the menu's onOpen event. If
 * the menu has no onOpen event, one is created.
 *
 * On completion $UIMenuIF("Succeeded") 1 => Success, 0 => Failure
 * 
 ******************************************************************************/
DEFINE_ACTION_MACRO EEUITweaks.PrependMenuonOpen
BEGIN
	LOCAL_SPRINT tempstr $UIMenuIF("Body")
	LOCAL_SPRINT tempfs $UIMenuIF("Filespec")
	LOCAL_SPRINT adder ~~
	LOCAL_SET found = 0

	// Read patch insertion from passed
	OUTER_SET found = SIZE_OF_FILE ~%tempfs%~
	COPY - ~%tempfs%~ ~.../CounterInLine~
		READ_ASCII 0 adder (%found%)

	// Put current menu definition into inline file
	OUTER_SET found = 0 
	COPY - ~ToInlineTemplate~ ~.../CounterInLine~
		REPLACE_EVALUATE ~dummy~ BEGIN END
		~%tempstr%~
	OUTER_SPRINT tempstr ~~

	// See if onOpen exists, if so, patch it
	OUTER_SET found = 0

	// Look for and patch onOpen followed by double quoted code block
	COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~onOpen%MWHITE%%MDQUOTE%\(%MNOTDQUOTE%*\)%MDQUOTE%~
		BEGIN
			SPRINT tempstr ~onOpen%LE%%TAB%"%LE%%MATCH1%%LE%%adder%%LE%%TAB%"~
			SET found = 1
		END
		~%tempstr%~

	// If not found, look for and patch onOpen followed by single quoted code block
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In ModOptions.StartOptionsFirstPatch - failed to find onOpen with double quotes. Trying single~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			REPLACE_EVALUATE CASE_INSENSITIVE ~onOpen%MWHITE%%MSQUOTE%\(%MNOTSQUOTE%*\)%MSQUOTE%~
			BEGIN
				SPRINT tempstr ~onOpen%LE%%TAB%'%LE%%MATCH1%%LE%%adder%%LE%%TAB%'~
				SET found = 1
			END
			~%tempstr%~
	END

	ACTION_IF NOT %found% THEN
	BEGIN // Manufacture onOpen
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
		REPLACE_EVALUATE CASE_INSENSITIVE ~\(^%MWHITE%menu%MWHITE%{.*%MEOL%\)~
			BEGIN
				SPRINT tempstr ~%MATCH1%%TAB%onOpen%LE%%TAB%"%LE%%adder%%TAB%"%LE%~
				SET found = 1
			END
			~%tempstr%~

	END

	// Not found - give up
	ACTION_IF NOT %found% THEN
	BEGIN
		LOG ~In EEUITweaks.PrependMenuonOpen - failed to find or add onOpen event~
		OUTER_SET $UIMenuIF("Succeeded") = 0
	END ELSE 

	// Success somewhere - copy .../CounterInLine to $UIMenuIF("Body")
	BEGIN
		OUTER_SPRINT $UIMenuIF("Body") ~~
		OUTER_SET found = SIZE_OF_FILE ~.../CounterInLine~
		COPY - ~.../CounterInLine~ ~.../CounterInLine~
			READ_ASCII 0 $UIMenuIF("Body") (%found%-1)
		OUTER_SET $UIMenuIF("Succeeded") = 1
	END
	COPY - ~EmptyInlineTemplate~ ~.../CounterInline~
END






