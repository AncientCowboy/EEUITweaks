`
--auto-roller version 2.1.63.2.0006
raceHasExceptionalStr = { 
	true, -- Human
	true, -- Elf
	true, -- Half-Elf
	true, -- Dwarf
	false, -- Halfling
	true, -- Gnome
	true -- Half-Orc
	}
classHasExceptionalStr = { 
	false, -- Mage
	true, -- Fighter
	false, -- Cleric
	false, -- Thief
	false, -- Bard
	true, -- Paladin
	true, -- Fighter / Mage
	true, -- Fighter / Cleric
	true, -- Fighter / Thief
	true, -- Fighter / Mage / Thief
	false, -- Druid
	true, -- Ranger
	false, -- Mage / Thief
	false, -- Cleric / Mage
	false, -- Cleric / Thief
	true, -- Fighter / Druid
	true, -- Fighter / Mage / Cleric
	true, -- Cleric / Ranger
	false, -- Sorcerer
	false, -- Monk
	false -- Shaman
 }
function HasExceptionalStrength( )
  return raceHasExceptionalStr[ chargen.selectedRace ] and classHasExceptionalStr[ chargen.selectedClass ]
end

function ShowExceptionalStrength( )
	local strength = tonumber( string.sub( chargen.ability[ 1 ].roll, 1, 2 ) )
	local abilityToDec = 2
	if strength ~= nil then
		while ( strength ~= nil ) and ( strength < 18 ) do
			createCharScreen:OnAbilityPlusMinusButtonClick( abilityToDec, false )
			abilityToDec = abilityToDec + 1
			if( abilityToDec == 7 ) then
				abilityToDec = 2
			end
			createCharScreen:OnAbilityPlusMinusButtonClick( 1, true )
			strength = tonumber( string.sub( chargen.ability[ 1 ].roll, 1, 2 ) )
		end
	end
end

function AutoRoll( )
	createCharScreen:OnAbilityReRollButtonClick()
	
	local exceptionalStrength = 0
	if( HasExceptionalStrength() ) then
		ShowExceptionalStrength( )
		exceptionalStrength = tonumber( string.sub( chargen.ability[ 1 ].roll, 4 ) )
		if exceptionalStrength ~= nil then
			if exceptionalStrength == 0 then
				exceptionalStrength = 100
			end	
		else
			exceptionalStrength = 0
		end
	end
	
	if ( ( storedTotalRoll == chargen.totalRoll ) and ( chargen.ability[ 1 ].exceptional < exceptionalStrength ) ) or
		 ( storedTotalRoll < chargen.totalRoll ) then
		storedTotalRoll = chargen.totalRoll
		chargen.ability[ 1 ].exceptional = exceptionalStrength
		chargen.ability[ 1 ].storedRoll = chargen.ability[ 1 ].roll
		chargen.ability[ 2 ].storedRoll = chargen.ability[ 2 ].roll
		chargen.ability[ 3 ].storedRoll = chargen.ability[ 3 ].roll
		chargen.ability[ 4 ].storedRoll = chargen.ability[ 4 ].roll
		chargen.ability[ 5 ].storedRoll = chargen.ability[ 5 ].roll
		chargen.ability[ 6 ].storedRoll = chargen.ability[ 6 ].roll
		createCharScreen:OnAbilityStoreButtonClick()
	end
end

RerollFrame = 0
storedTotalRoll = 0
function UpdateAutoRoll()
	if rolling == 1 then
		RerollFrame = RerollFrame + 1
		if RerollFrame > 1 then
			RerollFrame = 0
		end
	
		if RerollFrame == 0 then
		  local index = 1
			for index = 1, 1000, 1 do
				AutoRoll( )
			end
		end
	end
end
`
menu
{
	name 'CHARGEN_ABILITIES'
	modal
	align center center
	ignoreesc
	onOpen
	"
		ticksPassed = 0
		ticksStarting = 0
	"
	label
	{
		area 0 0 864 710
		mosaic LUICUSTB
	}
	label
	{
		area 82 12 700 40
		text "ABILITIES_TITLE"
		text style "title"
	}
	list
	{
		column
		{
			width 14
			label
			{
				area 0 0 -1 -1
				text lua "chargen.ability[rowNumber].storedRoll"
				text style "normal"
				align center center
			}
		}
		column
		{
			width 44
			label
			{
				area 0 0 -1 -1
				text lua "t(chargen.ability[rowNumber].name)"
				text style "normal"
				align right center
				pad 0 0 28 0				
			}
		}
		column
		{
			width 14
			label
			{
				area 0 0 -1 -1
				text lua "chargen.ability[rowNumber].roll"
				text style "normal"
				align center center
			}
		}
		column
		{
			width 14
			label
			{
				area 0 0 -1 -1
				bam LUIOSW
				frame lua "currentCellCheck(4)"
				sequence lua "chargenReverseButtons and 1 or 3"
				align left center
			}
		}
		column
		{
			width 14
			label
			{
				area 0 0 -1 -1
				bam LUIOSW
				frame lua "currentCellCheck(5)"
				sequence lua "chargenReverseButtons and 0 or 4"
				align right center
			}
		}
		action 
		"
			if ticksStarting < 10 then
				if cellNumber == 4 then
					Infinity_PlaySound('GAM_09')
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, not chargenReverseButtons)
				elseif cellNumber == 5 then
					Infinity_PlaySound('GAM_09')
					createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, chargenReverseButtons)
				end
			end
			cellNumber = nil
			ticksPassed = 0
			ticksStarting = 0
		"
		actionUpdate "
			ticksStarting = ticksStarting + 1
			if ticksStarting > 10 then
				ticksPassed = ticksPassed + 1
				if ticksPassed > 7 then
					if cellNumber == 4 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, not chargenReverseButtons)
					elseif cellNumber == 5 then
						createCharScreen:OnAbilityPlusMinusButtonClick(currentChargenAbility, chargenReverseButtons)
					end
					ticksPassed = 0
				end
			end
		"

		rowheight 54
		hidehighlight
		area 42 188 340 324
		table "chargen.ability"
		var currentChargenAbility
	}
	label
	{
		area 38 122 50 42
		text lua "storedTotalRoll"
		text style "normal"
		text align center center
	}
	label
	{
		area 88 122 136 42
		text "TOTAL_ROLL_NORMAL"
		text style "normal"
		text align right center
	}
	label
	{
		area 224 122 50 42
		text lua "chargen.totalRoll"
		text style "normal"
		text align center center
	}
	label
	{
		area 288 122 94 42
		text lua "chargen.extraAbilityPoints"
		text style "normal"
		text align center center
	}

	text
	{
		area 436 128 382 478
		text lua "abilityOrGeneralHelp()"
		text style "normal"
		scrollbar	'GUISCRC'
	}
	button
	{
		area 432 578 340 32
		bam LUICHLNG
		sequence 0
		text "AUTO-REROLL"
		text style "button"
		on A
		action "
			if rolling == 1 then
				rolling = 0
				createCharScreen:OnAbilityRecallButtonClick()
			else
				chargen.ability[ 1 ].exceptional = tonumber( string.sub( chargen.ability[ 1 ].roll, 4 ) )
				if chargen.ability[ 1 ].exceptional ~= nil then
					if chargen.ability[ 1 ].exceptional == 0 then
						chargen.ability[ 1 ].exceptional = 100
					end	
				else
					chargen.ability[ 1 ].exceptional = 0
				end
				storedTotalRoll = chargen.totalRoll
				rolling = 1
			end"
	}
	button
	{
		mosaic lua "UpdateAutoRoll()"
		area 1 1 1 1
	}
	button
	{
		area 42 510 340 32
		bam LUICHLNG
		sequence 0
		text "REROLL_BUTTON"
		text style "button"
		on R
		action "createCharScreen:OnAbilityReRollButtonClick()"
	}
	button
	{
		area 42 544 340 32
		bam LUICHLNG
		sequence 0
		text "STORE_BUTTON"
		text style "button"
		on S
		action "local exceptionalStrength = tonumber( string.sub( chargen.ability[ 1 ].roll, 4 ) )
				if exceptionalStrength ~= nil then
					if exceptionalStrength == 0 then
						exceptionalStrength = 100
					end	
				else
					exceptionalStrength = 0
				end
				storedTotalRoll = chargen.totalRoll
				chargen.ability[ 1 ].exceptional = exceptionalStrength
				chargen.ability[ 1 ].storedRoll = chargen.ability[ 1 ].roll
				chargen.ability[ 2 ].storedRoll = chargen.ability[ 2 ].roll
				chargen.ability[ 3 ].storedRoll = chargen.ability[ 3 ].roll
				chargen.ability[ 4 ].storedRoll = chargen.ability[ 4 ].roll
				chargen.ability[ 5 ].storedRoll = chargen.ability[ 5 ].roll
				chargen.ability[ 6 ].storedRoll = chargen.ability[ 6 ].roll
				createCharScreen:OnAbilityStoreButtonClick()
				"
	}
	button
	{
		area 42 578 340 32
		bam LUICHLNG
		sequence 0
		text "RECALL_BUTTON"
		text style "button"
		on C
		clickable lua "createCharScreen:IsAbilityRecallButtonClickable()"
		action "createCharScreen:OnAbilityRecallButtonClick()"
	}

	button
	{
		on '8'
		action "createCharScreen:OnCheatyMcCheaterson()"
		
		
	}

	button
	{
		on return
		bam LUIOSTUL
		area 210 653 234 44
		text style "button"
		text lua "nextOrDone()"
		clickable lua "createCharScreen:IsDoneButtonClickable()"
		action
		"
			Infinity_PopMenu()
			createCharScreen:OnDoneButtonClick()
		"
	}
	button
	{
		on escape
		bam LUIOSTUR
		area 464 653 234 44
		text style "button"
		text "BACK_BUTTON"
		action
		"
			Infinity_PopMenu()
			createCharScreen:OnCancelButtonClick()
		"
	}
}